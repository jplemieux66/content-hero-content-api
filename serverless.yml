# org: jeanphilippelemieux66
# app: content-hero-api
service: content-hero-rest-api

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dotenv:
    basePath: config/

# Add the serverless-webpack plugin
plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    AUTH0_CLIENT_PUBLIC_KEY: ${file(${env:AUTH0_CLIENT_PUBLIC_KEY_PATH})}

functions:
  delete-all:
    handler: api/delete-all.handler
    events:
      - http:
          path: all
          method: delete
          cors: true

  # Content API
  content-create:
    handler: api/content/create.handler
    events:
      - http:
          path: /collections/${collectionId}/content
          method: post
          cors: true

  content-list:
    handler: api/content/list.handler
    events:
      - http:
          path: /collections/${collectionId}/content
          method: get
          cors: true

  content-get:
    handler: api/content/get.handler
    events:
      - http:
          path: /collections/${collectionId}/content/{id}
          method: get
          cors: true

  content-update:
    handler: api/content/update.handler
    events:
      - http:
          path: /collections/${collectionId}/content/{id}
          method: patch
          cors: true

  content-delete:
    handler: api/content/delete.handler
    events:
      - http:
          path: /collections/${collectionId}/content/{id}
          method: delete
          cors: true

  # Tags API
  tag-create:
    handler: api/tags/create.handler
    events:
      - http:
          path: tags
          method: post
          cors: true

  tags-list:
    handler: api/tags/list.handler
    events:
      - http:
          path: tags
          method: get
          cors: true

  tags-get:
    handler: api/tags/get.handler
    events:
      - http:
          path: tags/{id}
          method: get
          cors: true

  tags-update:
    handler: api/tags/update.handler
    events:
      - http:
          path: tags/{id}
          method: patch
          cors: true

  tags-delete:
    handler: api/tags/delete.handler
    events:
      - http:
          path: tags/{id}
          method: delete
          cors: true

  # Collections API
  collections-create:
    handler: api/collections/create.handler
    events:
      - http:
          path: collections
          method: post
          cors: true

  collections-list:
    handler: api/collections/list.handler
    events:
      - http:
          path: collections
          method: get
          cors: true

  collections-get:
    handler: api/collections/get.handler
    events:
      - http:
          path: collections/{id}
          method: get
          cors: true

  collections-update:
    handler: api/collections/update.handler
    events:
      - http:
          path: collections/{id}
          method: patch
          cors: true

  collections-delete:
    handler: api/collections/delete.handler
    events:
      - http:
          path: collections/{id}
          method: delete
          cors: true

  collections-add-user:
    handler: api/collections/add-user.handler
    events:
      - http:
          path: collections/{id}/users/
          method: post
          cors: true

  collections-remove-user:
    handler: api/collections/remove-user.handler
    events:
      - http:
          path: collections/{id}/users/
          method: delete
          cors: true
