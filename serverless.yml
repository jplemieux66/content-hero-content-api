# org: jeanphilippelemieux66
# app: content-hero-api
service: content-hero-rest-api

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dotenv:
    basePath: config/

# Add the serverless-webpack plugin
plugins:
  - serverless-dotenv-plugin
  - serverless-jetpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    AUTH0_CLIENT_PUBLIC_KEY: ${file(${env:AUTH0_CLIENT_PUBLIC_KEY_PATH})}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'ses:*'
      Resource: '*'
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource: 'arn:aws:s3:::${env:S3_BUCKET}/*'

functions:
  delete-all:
    handler: .webpack/delete-all.handler
    events:
      - http:
          path: all
          method: delete
          cors: true

  # Content API
  content-create:
    handler: .webpack/content/create.handler
    events:
      - http:
          path: /projects/{projectId}/content
          method: post
          cors: true

  content-list:
    handler: .webpack/content/list.handler
    events:
      - http:
          path: /projects/{projectId}/content
          method: get
          cors: true

  content-get:
    handler: .webpack/content/get.handler
    events:
      - http:
          path: /projects/{projectId}/content/{id}
          method: get
          cors: true

  content-update:
    handler: .webpack/content/update.handler
    events:
      - http:
          path: /projects/{projectId}/content/{id}
          method: patch
          cors: true

  content-delete:
    handler: .webpack/content/delete.handler
    events:
      - http:
          path: /projects/{projectId}/content/{id}
          method: delete
          cors: true

  # Tags API
  tag-create:
    handler: .webpack/tags/create.handler
    events:
      - http:
          path: /projects/{projectId}/tags
          method: post
          cors: true

  tags-list:
    handler: .webpack/tags/list.handler
    events:
      - http:
          path: /projects/{projectId}/tags
          method: get
          cors: true

  tags-get:
    handler: .webpack/tags/get.handler
    events:
      - http:
          path: /projects/{projectId}/tags/{id}
          method: get
          cors: true

  tags-update:
    handler: .webpack/tags/update.handler
    events:
      - http:
          path: /projects/{projectId}/tags/{id}
          method: patch
          cors: true

  tags-delete:
    handler: .webpack/tags/delete.handler
    events:
      - http:
          path: /projects/{projectId}/tags/{id}
          method: delete
          cors: true

  # Projects API
  projects-create:
    handler: .webpack/projects/create.handler
    events:
      - http:
          path: projects
          method: post
          cors: true

  projects-list:
    handler: .webpack/projects/list.handler
    events:
      - http:
          path: projects
          method: get
          cors: true

  projects-get:
    handler: .webpack/projects/get.handler
    events:
      - http:
          path: projects/{projectId}
          method: get
          cors: true

  projects-update:
    handler: .webpack/projects/update.handler
    events:
      - http:
          path: projects/{projectId}
          method: patch
          cors: true

  projects-delete:
    handler: .webpack/projects/delete.handler
    events:
      - http:
          path: projects/{projectId}
          method: delete
          cors: true

  # Users API
  user-create:
    handler: .webpack/users/create.handler
    events:
      - http:
          path: /projects/{projectId}/users
          method: post
          cors: true

  users-list:
    handler: .webpack/users/list.handler
    events:
      - http:
          path: /projects/{projectId}/users
          method: get
          cors: true

  users-update:
    handler: .webpack/users/update.handler
    events:
      - http:
          path: /projects/{projectId}/users/{id}
          method: patch
          cors: true

  users-delete:
    handler: .webpack/users/delete.handler
    events:
      - http:
          path: /projects/{projectId}/users/{id}
          method: delete
          cors: true

  # Uploads API
  request-upload-url:
    handler: .webpack/uploads/request-upload-url.handler
    events:
      - http:
          path: /request-upload-url
          method: post
          cors: true

  process-video:
    handler: .webpack/uploads/process-video.handler
    layers:
      - ${cf:content-hero-lambda-layers-dev.FfmpegLayerExport}
    package:
      individually: true
      exclude:
        - ./**
      include:
        - .webpack/uploads/process-video.*

    events:
      - http:
          path: /projects/{projectId}/uploads/process-video
          method: post
          cors: true
          async: true

  process-photo:
    handler: .webpack/uploads/process-photo.handler
    package:
      individually: true
      exclude:
        - ./**
      include:
        - .webpack/uploads/process-photo.*
    events:
      - http:
          path: /projects/{projectId}/uploads/process-photo
          method: post
          cors: true
          async: true

  create-file-upload:
    handler: .webpack/uploads/create.handler
    events:
      - http:
          path: projects/{projectId}/uploads
          method: post
          cors: true

  update-file-upload:
    handler: .webpack/uploads/update.handler
    events:
      - http:
          path: projects/{projectId}/uploads/{id}
          method: patch
          cors: true

  list-file-uploads:
    handler: .webpack/uploads/list.handler
    events:
      - http:
          path: projects/{projectId}/uploads/
          method: get
          cors: true

  delete-file-upload:
    handler: .webpack/uploads/delete.handler
    events:
      - http:
          path: projects/{projectId}/uploads/{id}
          method: delete
          cors: true

  delete-file-uploads-for-user:
    handler: .webpack/uploads/delete-for-user.handler
    events:
      - http:
          path: projects/{projectId}/uploads/
          method: delete
          cors: true
